-- Create the 'mentorship' database
CREATE DATABASE IF NOT EXISTS mentorship;

-- Switch to the 'mentorship' database
USE mentorship;

-- Create the 'users' table
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS user_details (
    id INT PRIMARY KEY,
    user_type VARCHAR(50) NOT NULL,
    gender VARCHAR(10),
    bio TEXT,
    country VARCHAR(50),
    language VARCHAR(50),
    cover_pic VARCHAR(255),
    profile_pic VARCHAR(255),
    FOREIGN KEY (id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB;

INSERT INTO user_details (id, user_type, gender, bio, country, language, cover_pic, profile_pic)
VALUES
    (1, 'Mentor', 'Male', 'Experienced mentor in various fields', 'USA', 'English', 'mentor_cover.jpg', 'mentor_profile.jpg');


-- Create the 'skill_set' table
CREATE TABLE IF NOT EXISTS skill_set (
    id INT AUTO_INCREMENT PRIMARY KEY,
    userid INT,
    skill_name VARCHAR(255) NOT NULL,
    skill_level INT,
    FOREIGN KEY (userid) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB;


-- Insert data into 'skill_set' table
INSERT INTO skill_set (userid, skill_name, skill_level)
VALUES
    (1, 'Programming', 5),
    (1, 'Design', 3),
    (2, 'Communication', 4);

-- Creating Table user_contacts for user contact infos -- 

CREATE TABLE user_contacts (
    id INT PRIMARY KEY,
    userLinkedin VARCHAR(255),
    userFacebook VARCHAR(255),
    userX VARCHAR(255),
    userGithub VARCHAR(255),
    userID INT NOT NULL,
    FOREIGN KEY (userID) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- Insert data into table user_contacts -- 
INSERT INTO `user_contacts`(`id`, `userLinkedin`, `userFacebook`, `userX`, `userGithub`, `userID`) VALUES (1,'[value-2]','[value-3]','[value-4]','[value-5]',1);

-- Relationships --
CREATE TABLE relationships (
    id INT PRIMARY KEY,
    followerUserId INT NOT NULL,
    followedUserId INT NOT NULL,
    FOREIGN KEY (followerUserId) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (followedUserId) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Create Session table
CREATE TABLE Session (
    SessionID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(255),
    Mentor VARCHAR(255),
    Date DATE,
    StartTime TIME,
    Audience VARCHAR(255),
    Link VARCHAR(255)
);
-- Insert 5 sample entries
INSERT INTO Session (Title, Mentor, Date, StartTime, Audience, Link)
VALUES
    ('Web Development Basics', 'John Doe', '2023-11-15', '09:00:00', 'Beginner', 'http://example.com/session1'),
    ('React Fundamentals', 'Jane Smith', '2023-11-16', '14:30:00', 'Intermediate', 'http://example.com/session2'),
    ('Node.js Workshop', 'Alice Wonderland', '2023-11-18', '11:00:00', 'Advanced', 'http://example.com/session3'),
    ('Python Programming', 'Bob Builder', '2023-11-20', '16:00:00', 'Beginner', 'http://example.com/session4'),
    ('Database Design Principles', 'Eve Explorer', '2023-11-22', '13:30:00', 'Intermediate', 'http://example.com/session5'),
    ('Web Development Basics', 'John Doe', '2023-11-15', '09:00:00', 'Beginner', 'http://example.com/session1'),
    ('React Fundamentals', 'Jane Smith', '2023-11-16', '14:30:00', 'Intermediate', 'http://example.com/session2');